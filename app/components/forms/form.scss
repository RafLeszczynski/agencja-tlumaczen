@import '../../scss/variables';

$inputFortSize: 16px;
$labelRiseFontSize: 14px;
$errorFontSize: 12px;
$inputWrapperPadding: 20px;
$inputPadding: 5px;
$inputBorderWidth: 1px;
$labelTransitionDuration: .2s;

@keyframes circle {
	0%
	{
		-webkit-transform: rotate(0);
		-ms-transform: rotate(0);
		-o-transform: rotate(0);
		transform: rotate(0);
	}
	100%
	{
		-webkit-transform: rotate(360deg);
		-ms-transform: rotate(360deg);
		-o-transform: rotate(360deg);
		transform: rotate(360deg);
	}
}

.form {
	text-align: right;
}

.input-group {
	font-size: $inputFortSize;
	padding: $inputWrapperPadding 0;
	position: relative;
	text-align: left;
}

.input-group_radio:not(:first-child) {
	padding: $inputWrapperPadding 0 0;
}

.input,
.textarea {
	background-color: transparent;
	border: none;
	border-bottom: $inputBorderWidth solid $brandingColor;
	outline: none;
	padding: $inputPadding 0;
	width: 100%;
}

.input_file,
.input_radio {
	opacity: 0;
	overflow: hidden;
	width: 0;
	height: 0;
}

.textarea {
	box-sizing: border-box;
	resize: none;
}

.label {
	color: $brandingLightColor;
	left: 0;

	position: absolute;
	transition: font-size $labelTransitionDuration, top $labelTransitionDuration;

	.input_empty + &,
	.textarea_empty + &,
	.input_radio:focus + & {
		font-size: $inputFortSize;
		top: $inputWrapperPadding + $inputPadding;
	}

	,
	.input:focus + &,
	.textarea:focus + & {
		font-size: $labelRiseFontSize;
		top: 0;
	}

	.input_file:focus + &,
	.input_radio:focus + & {
		font-size: $inputFortSize;
		top: auto;
	}

	.input_file + & {
		cursor: pointer;
		position: static;
		top: auto;
	}

	.input_radio + & {
		color: $brandingColor;
		cursor: pointer;
		font-size: $inputFortSize;
		position: relative;
		padding-left: 60px;
		top: auto;

		&:before {
			border: 2px solid $brandingColor;
			border-radius: 20px;
			content: '';
			display: block;
			height: 20px;
			left: 0;
			position: absolute;
			top: -2px;
			width: 20px;
		}

		&:hover:before {
			background-color: transparentize($brandingColor, .6);
		}
	}

	.input_checked + & {
		&:after {
			background-color: $brandingColor;
			border-radius: 5px;
			content: '';
			display: block;
			left: 7px;
			height: 10px;
			position: absolute;
			top: 5px;
			width: 10px;
		}
	}
}

.add-attachment-input {
	align-items: center;
	display: flex;
	font-size: 14px;

	svg {
		fill: $brandingLightColor;
		height: 26px;
		margin-right: 10px;
		width: 26px;
	}

	&:hover {
		color: $brandingColor;

		svg {
			fill: $brandingColor;
		}

		.input_file:disabled + label & {
			color: $brandingLightColor;
			cursor: not-allowed;

			svg {
				fill: $brandingLightColor;
			}
		}
	}
}

.file-attachment {
	background-color: transparentize($brandingColor, .9);
	display: flex;
	justify-content: space-between;
	margin-bottom: 15px;
	padding: 4px 5px 2px 7px;
	text-align: left;

	@media(min-width: $breakPointLarge) {
		width: 350px;
	}

	> span {
		text-overflow: ellipsis;
		overflow: hidden;
		padding-right: 10px;
		white-space: nowrap;
	}

	.close-icon {
		color: $brandingColor;
		display: inline-block;
		height: 22px;
		left: auto;
		position: relative;
		top: auto;
		width: 20px;

		span {
			background-color: $brandingColor;
			height: 2px;
			top: 10px;
		}
	}
}

.loading-info {
	background-color: $secondaryColor;
	border-radius: 1px;
	margin: 80px auto;
	padding: 30px;
	text-align: center;
	width: 80%;

	span {
		display: block;
		padding: 10px 0;
	}

	.loading-throbber {
		animation: circle infinite .75s linear;
		border: 2px solid $brandingColor;
		border-radius: 100%;
		border-top-color: transparent;
		height: 25px;
		margin: 0 auto;
		padding: 0;
		width: 25px;
	}
}

.validation-error {
	color: $errorColor;
	font-size: $errorFontSize;
}